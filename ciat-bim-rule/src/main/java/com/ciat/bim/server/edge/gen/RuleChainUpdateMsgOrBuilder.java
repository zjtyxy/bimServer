// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edge.proto

package com.ciat.bim.server.edge.gen;

public interface RuleChainUpdateMsgOrBuilder extends
    // @@protoc_insertion_point(interface_extends:edge.RuleChainUpdateMsg)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.edge.UpdateMsgType msgType = 1;</code>
   * @return The enum numeric value on the wire for msgType.
   */
  int getMsgTypeValue();
  /**
   * <code>.edge.UpdateMsgType msgType = 1;</code>
   * @return The msgType.
   */
  UpdateMsgType getMsgType();

  /**
   * <code>int64 idMSB = 2;</code>
   * @return The idMSB.
   */
  long getIdMSB();

  /**
   * <code>int64 idLSB = 3;</code>
   * @return The idLSB.
   */
  long getIdLSB();

  /**
   * <code>string name = 4;</code>
   * @return The name.
   */
  String getName();
  /**
   * <code>string name = 4;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>optional int64 firstRuleNodeIdMSB = 5;</code>
   * @return Whether the firstRuleNodeIdMSB field is set.
   */
  boolean hasFirstRuleNodeIdMSB();
  /**
   * <code>optional int64 firstRuleNodeIdMSB = 5;</code>
   * @return The firstRuleNodeIdMSB.
   */
  long getFirstRuleNodeIdMSB();

  /**
   * <code>optional int64 firstRuleNodeIdLSB = 6;</code>
   * @return Whether the firstRuleNodeIdLSB field is set.
   */
  boolean hasFirstRuleNodeIdLSB();
  /**
   * <code>optional int64 firstRuleNodeIdLSB = 6;</code>
   * @return The firstRuleNodeIdLSB.
   */
  long getFirstRuleNodeIdLSB();

  /**
   * <code>bool root = 7;</code>
   * @return The root.
   */
  boolean getRoot();

  /**
   * <code>bool debugMode = 8;</code>
   * @return The debugMode.
   */
  boolean getDebugMode();

  /**
   * <code>string configuration = 9;</code>
   * @return The configuration.
   */
  String getConfiguration();
  /**
   * <code>string configuration = 9;</code>
   * @return The bytes for configuration.
   */
  com.google.protobuf.ByteString
      getConfigurationBytes();
}
