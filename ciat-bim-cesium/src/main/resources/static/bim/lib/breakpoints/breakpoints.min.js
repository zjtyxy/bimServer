!function (t, s, a) {
    "use strict";

    function i(t, n) {
        for (var i in t) if (!1 === n(i, t[i])) break
    }

    function o(t) {
        return "function" == typeof t || !1
    }

    function e(t, n) {
        for (var i in n) t[i] = n[i];
        return t
    }

    var h = s.Breakpoints = function () {
        h.define.apply(h, arguments)
    };
    h.defaults = {
        xs: {min: 0, max: 767},
        sm: {min: 768, max: 991},
        md: {min: 992, max: 1199},
        lg: {min: 1200, max: 1 / 0}
    };
    var c = h.mediaBuilder = {
        min: function (t, n) {
            return "(min-width: " + t + n + ")"
        }, max: function (t, n) {
            return "(max-width: " + t + n + ")"
        }, between: function (t, n, i) {
            return "(min-width: " + t + i + ") and (max-width: " + n + i + ")"
        }, get: function (t, n, i) {
            return i || (i = "px"), 0 === t ? this.max(n, i) : n === 1 / 0 ? this.min(t, i) : this.between(t, n, i)
        }
    }, n = function () {
        var r = [];
        return {
            length: 0, add: function (t, n, i) {
                r.push({fn: t, data: n || {}, one: i || 0}), this.length++
            }, remove: function (t) {
                for (var n = 0; n < r.length; n++) r[n].fn === t && (r.splice(n, 1), this.length--, n--)
            }, empty: function () {
                r = [], this.length = 0
            }, call: function (t, n, i) {
                n || (n = this.length - 1);
                var e = r[n];
                o(i) ? i.call(this, t, e, n) : o(e.fn) && e.fn.call(t || s, e.data), e.one && (delete r[n], this.length--)
            }, fire: function (t, n) {
                for (var i in r) this.call(t, i, n)
            }
        }
    }, u = {
        current: null, callbacks: new n, trigger: function (i) {
            var e = this.current;
            this.current = i, this.callbacks.fire(i, function (t, n) {
                o(n.fn) && n.fn.call({current: i, previous: e}, n.data)
            })
        }, one: function (t, n) {
            return this.on(t, n, 1)
        }, on: function (t, n, i) {
            return null == n && o(t) && (n = t, t = a), o(n) ? void this.callbacks.add(n, t, i) : this
        }, off: function (t) {
            null == t && this.callbacks.empty()
        }
    }, r = h.mediaQuery = function (t, n) {
        this.name = t, this.media = n, this.initialize.apply(this)
    };
    r.prototype = {
        constructor: r, initialize: function () {
            this.callbacks = {
                enter: new n,
                leave: new n
            }, this.mql = s.matchMedia && s.matchMedia(this.media) || {
                matches: !1,
                media: this.media,
                addListener: function () {
                },
                removeListener: function () {
                }
            };
            var i = this;
            this.mqlListener = function (t) {
                var n = t.matches ? "enter" : "leave";
                i.callbacks[n].fire(i)
            }, this.mql.addListener(this.mqlListener)
        }, on: function (t, n, i, e) {
            var r;
            if ("object" == typeof t) {
                for (r in t) this.on(r, n, t[r], e);
                return this
            }
            return null == i && o(n) && (i = n, n = a), o(i) && t in this.callbacks && (this.callbacks[t].add(i, n, e), this.isMatched() && "enter" === t && this.callbacks[t].call(this)), this
        }, one: function (t, n, i) {
            return this.on(t, n, i, 1)
        }, off: function (t, n) {
            var i;
            if ("object" == typeof t) {
                for (i in t) this.off(i, t[i]);
                return this
            }
            return null == t && (this.callbacks.enter.empty(), this.callbacks.leave.empty()), t in this.callbacks && (n ? this.callbacks[t].remove(n) : this.callbacks[t].empty()), this
        }, isMatched: function () {
            return this.mql.matches
        }, destory: function () {
            this.off()
        }
    };
    var f = function (t, n, i, e) {
        this.name = t, this.min = n || 0, this.max = i || 1 / 0, this.media = c.get(this.min, this.max, e), this.initialize.apply(this);
        var r = this;
        this.changeListener = function () {
            r.isMatched() && u.trigger(r)
        }, this.isMatched() && (u.current = this), this.mql.addListener(this.changeListener)
    };
    e(((f.prototype = r.prototype).constructor = f).prototype, {
        destory: function () {
            this.off(), this.mql.removeListener(this.changeHander)
        }
    });
    var l = function (t) {
        this.name = t, this.sizes = [];
        var e = this, r = [];
        i(t.split(" "), function (t, n) {
            var i = h.get(n);
            i && (e.sizes.push(i), r.push(i.media))
        }), this.media = r.join(","), this.initialize.apply(this)
    };
    (l.prototype = r.prototype).constructor = l;
    var d = {}, m = {};
    h = e(h, {
        defined: !1, define: function (t, n) {
            for (var i in this.defined && this.destory(), t || (t = h.defaults), this.options = e(n || {}, {unit: "px"}), t) this.set(i, t[i].min, t[i].max, this.options.unit);
            this.defined = !0
        }, destory: function () {
            i(d, function (t, n) {
                n.destory()
            }), d = {}, u.current = null
        }, is: function (t) {
            var n = this.get(t);
            return n ? n.isMatched() : null
        }, all: function () {
            var n = [];
            return i(d, function (t) {
                n.push(t)
            }), n
        }, set: function (t, n, i, e) {
            var r = this.get(t);
            return r && r.destory(), d[t] = new f(t, n || null, i || null, e || null), d[t]
        }, get: function (t) {
            return d.hasOwnProperty(t) ? d[t] : null
        }, getUnion: function (t) {
            return m.hasOwnProperty(t) || (m[t] = new l(t)), m[t]
        }, getMin: function (t) {
            var n = this.get(t);
            return n ? n.min : null
        }, getMax: function (t) {
            var n = this.get(t);
            return n ? n.max : null
        }, current: function () {
            return u.current
        }, getMedia: function (t) {
            var n = this.get(t);
            return n ? n.media : null
        }, on: function (t, n, i, e, r) {
            if ("change" === t) return e = i, i = n, u.on(i, e, r);
            if (t.indexOf(" ")) {
                var s = this.getUnion(t);
                s && s.on(n, i, e, r)
            } else {
                var a = this.get(t);
                a && a.on(n, i, e, r)
            }
            return this
        }, one: function (t, n, i, e) {
            return this.on(t, n, i, e, 1)
        }, off: function (t, n, i) {
            if ("change" === t) return u.off(n);
            if (t.indexOf(" ")) {
                var e = this.getUnion(t);
                e && e.off(n, i)
            } else {
                var r = this.get(t);
                r && r.off(n, i)
            }
            return this
        }
    })
}(document, window);
